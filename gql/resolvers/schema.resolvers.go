package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.63

import (
	"context"
	"fmt"
	generated1 "iam_services_main_v1/gql/generated"
	models1 "iam_services_main_v1/gql/models"

	"github.com/google/uuid"
)

// CreateRole is the resolver for the createRole field.
func (r *mutationResolver) CreateRole(ctx context.Context, input models1.CreateRoleInput) (models1.OperationResult, error) {
	panic(fmt.Errorf("not implemented: CreateRole - createRole"))
}

// CreateTenant is the resolver for the createTenant field.
func (r *mutationResolver) CreateTenant(ctx context.Context, input models1.CreateTenantInput) (models1.OperationResult, error) {
	panic(fmt.Errorf("not implemented: CreateTenant - createTenant"))
}

// DeleteRole is the resolver for the deleteRole field.
func (r *mutationResolver) DeleteRole(ctx context.Context, input models1.DeleteInput) (models1.OperationResult, error) {
	panic(fmt.Errorf("not implemented: DeleteRole - deleteRole"))
}

// DeleteTenant is the resolver for the deleteTenant field.
func (r *mutationResolver) DeleteTenant(ctx context.Context, input models1.DeleteInput) (models1.OperationResult, error) {
	panic(fmt.Errorf("not implemented: DeleteTenant - deleteTenant"))
}

// UpdateRole is the resolver for the updateRole field.
func (r *mutationResolver) UpdateRole(ctx context.Context, input models1.UpdateRoleInput) (models1.OperationResult, error) {
	panic(fmt.Errorf("not implemented: UpdateRole - updateRole"))
}

// UpdateTenant is the resolver for the updateTenant field.
func (r *mutationResolver) UpdateTenant(ctx context.Context, input models1.UpdateTenantInput) (models1.OperationResult, error) {
	panic(fmt.Errorf("not implemented: UpdateTenant - updateTenant"))
}

// Role is the resolver for the role field.
func (r *queryResolver) Role(ctx context.Context, id uuid.UUID) (models1.OperationResult, error) {
	panic(fmt.Errorf("not implemented: Role - role"))
}

// Roles is the resolver for the roles field.
func (r *queryResolver) Roles(ctx context.Context) (models1.OperationResult, error) {
	panic(fmt.Errorf("not implemented: Roles - roles"))
}

// Tenant is the resolver for the tenant field.
func (r *queryResolver) Tenant(ctx context.Context, id uuid.UUID) (models1.OperationResult, error) {
	panic(fmt.Errorf("not implemented: Tenant - tenant"))
}

// Tenants is the resolver for the tenants field.
func (r *queryResolver) Tenants(ctx context.Context) (models1.OperationResult, error) {
	panic(fmt.Errorf("not implemented: Tenants - tenants"))
}

// Mutation returns generated1.MutationResolver implementation.
func (r *Resolver) Mutation() generated1.MutationResolver { return &mutationResolver{r} }

// Query returns generated1.QueryResolver implementation.
func (r *Resolver) Query() generated1.QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
